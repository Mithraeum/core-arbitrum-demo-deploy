/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Banners,
  BannersInterface,
} from "../../../contracts/banners/Banners";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxAmountOfMintedBannersPerAddress_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotMintMoreThanMaximumAllowedAmountToMintForThisMsgSender",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToUpdateBannerDueToTokenIdDoesNotBelongToCaller",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bannerName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Banners.Part[16]",
        name: "bannerParts",
        type: "tuple[16]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BannerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBannerName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Banners.Part[16]",
        name: "newBannerParts",
        type: "tuple[16]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BannerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bannerData",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
    ],
    name: "getBannerData",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Banners.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getBannersDataByTokenIds",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct Banners.Part[16]",
            name: "parts",
            type: "tuple[16]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Banners.BannerData[]",
        name: "bannersData",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holderAddress",
        type: "address",
      },
    ],
    name: "getTokenIdsByAddress",
    outputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmountOfMintedBannersPerAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Banners.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedBannersByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Banners.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "updateBanner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600d553480156200001657600080fd5b5060405162003571380380620035718339810160408190526200003991620001ac565b83836000620000498382620002d4565b506001620000588282620002d4565b505050620000756200006f6200009160201b60201c565b62000095565b600c620000838382620002d4565b50600e5550620003a0915050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010f57600080fd5b81516001600160401b03808211156200012c576200012c620000e7565b604051601f8301601f19908116603f01168101908282118183101715620001575762000157620000e7565b816040528381526020925086838588010111156200017457600080fd5b600091505b8382101562000198578582018301518183018401529082019062000179565b600093810190920192909252949350505050565b60008060008060808587031215620001c357600080fd5b84516001600160401b0380821115620001db57600080fd5b620001e988838901620000fd565b955060208701519150808211156200020057600080fd5b6200020e88838901620000fd565b945060408701519150808211156200022557600080fd5b506200023487828801620000fd565b606096909601519497939650505050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cf57600081815260208120601f850160051c81016020861015620002aa5750805b601f850160051c820191505b81811015620002cb57828155600101620002b6565b5050505b505050565b81516001600160401b03811115620002f057620002f0620000e7565b620003088162000301845462000245565b8462000281565b602080601f831160018114620003405760008415620003275750858301515b600019600386901b1c1916600185901b178555620002cb565b600085815260208120601f198616915b82811015620003715788860151825594840194600190910190840162000350565b5085821015620003905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6131c180620003b06000396000f3fe608060405234801561001057600080fd5b50600436106101905760003560e01c806389d5feee116100df57806389d5feee146102f05780638da5cb5b1461031057806395d89b4114610321578063a22cb46514610329578063a6a530091461033c578063b64a10971461034f578063b88d4fde14610362578063bc197c8114610375578063be0c5c63146103b0578063c30f4a5a146103d2578063c87b56dd146103e5578063e985e9c5146103f8578063edc7e7621461040b578063f23a6e611461042b578063f2fde38b1461044b578063f84ddf0b1461045e57600080fd5b806301ffc9a71461019557806306fdde03146101bd578063081812fc146101d2578063095ea7b3146101fd57806318160ddd1461021257806323b872dd146102245780632f745c59146102375780633bc2e7261461024a57806342842e0e1461026a5780634b4e5cac1461027d5780634f6ccce7146102865780636352211e146102995780636c0360eb146102ac57806370a08231146102b4578063715018a6146102c757806389c74e9e146102cf575b600080fd5b6101a86101a33660046123f1565b610467565b60405190151581526020015b60405180910390f35b6101c5610487565b6040516101b4919061245e565b6101e56101e0366004612471565b610519565b6040516001600160a01b0390911681526020016101b4565b61021061020b3660046124a6565b610540565b005b6008545b6040519081526020016101b4565b6102106102323660046124d0565b61065a565b6102166102453660046124a6565b61068b565b61021661025836600461250c565b600f6020526000908152604090205481565b6102106102783660046124d0565b610721565b610216600e5481565b610216610294366004612471565b61073c565b6101e56102a7366004612471565b6107cf565b6101c5610804565b6102166102c236600461250c565b610892565b610210610918565b6102e26102dd366004612471565b61092c565b6040516101b4929190612527565b6103036102fe36600461250c565b610a58565b6040516101b49190612555565b600a546001600160a01b03166101e5565b6101c5610af6565b610210610337366004612599565b610b05565b61021061034a36600461279e565b610b14565b61021061035d366004612827565b611055565b6102106103703660046128a6565b611149565b610397610383366004612945565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101b4565b6103c36103be366004612471565b611181565b6040516101b493929190612a37565b6102106103e0366004612a77565b61132b565b6101c56103f3366004612471565b61133f565b6101a8610406366004612abf565b6113a6565b61041e610419366004612af2565b6113d4565b6040516101b49190612b97565b610397610439366004612c33565b63f23a6e6160e01b9695505050505050565b61021061045936600461250c565b61162c565b610216600d5481565b6000610472826116a5565b806104815750610481826116ca565b92915050565b60606000805461049690612caa565b80601f01602080910402602001604051908101604052809291908181526020018280546104c290612caa565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b6000610524826116ef565b506000908152600460205260409020546001600160a01b031690565b600061054b826107cf565b9050806001600160a01b0316836001600160a01b0316036105bd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105d957506105d981336113a6565b61064b5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105b4565b6106558383611714565b505050565b6106643382611782565b6106805760405162461bcd60e51b81526004016105b490612cde565b6106558383836117e1565b600061069683610892565b82106106f85760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016105b4565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61065583838360405180602001604052806000815250611149565b600061074760085490565b82106107aa5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105b4565b600882815481106107bd576107bd612d2c565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104815760405162461bcd60e51b81526004016105b490612d42565b600c805461081190612caa565b80601f016020809104026020016040519081016040528092919081815260200182805461083d90612caa565b801561088a5780601f1061085f5761010080835404028352916020019161088a565b820191906000526020600020905b81548152906001019060200180831161086d57829003601f168201915b505050505081565b60006001600160a01b0382166108fc5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105b4565b506001600160a01b031660009081526003602052604090205490565b610920611988565b61092a60006119e2565b565b600b6020526000908152604090208054819061094790612caa565b80601f016020809104026020016040519081016040528092919081815260200182805461097390612caa565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b5050505050908060210180546109d590612caa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0190612caa565b8015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b5050505050905082565b60606000610a6583610892565b9050806001600160401b03811115610a7f57610a7f61261d565b604051908082528060200260200182016040528015610aa8578160200160208202803683370190505b50915060005b81811015610aef57610ac0848261068b565b838281518110610ad257610ad2612d2c565b602090810291909101015280610ae781612d8a565b915050610aae565b5050919050565b60606001805461049690612caa565b610b10338383611a34565b5050565b610b1d856107cf565b6001600160a01b0316336001600160a01b031614610b4d5760405162559caf60e91b815260040160405180910390fd5b60005b6010811015610fd8576000868152600b602052604090206001018160108110610b7b57610b7b612d2c565b60020201546001600160a01b0316838260108110610b9b57610b9b612d2c565b6020020151516001600160a01b0316148015610bf957506000868152600b602052604090206001018160108110610bd457610bd4612d2c565b6002020160010154838260108110610bee57610bee612d2c565b602002015160200151145b610fc6576000838260108110610c1157610c11612d2c565b6020020151516001600160a01b031614610d7d57828160108110610c3757610c37612d2c565b6020020151516001600160a01b031663f242432a3330868560108110610c5f57610c5f612d2c565b60200201516020015160016040518563ffffffff1660e01b8152600401610c899493929190612da3565b600060405180830381600087803b158015610ca357600080fd5b505af1925050508015610cb4575060015b610d7d573d808015610ce2576040519150601f19603f3d011682016040523d82523d6000602084013e610ce7565b606091505b50838260108110610cfa57610cfa612d2c565b6020020151516001600160a01b03166342842e0e3330878660108110610d2257610d22612d2c565b6020020151602001516040518463ffffffff1660e01b8152600401610d4993929190612de6565b600060405180830381600087803b158015610d6357600080fd5b505af1158015610d77573d6000803e3d6000fd5b50505050505b6000868152600b602052604081206001018260108110610d9f57610d9f612d2c565b60020201546001600160a01b031614610f52576000868152600b602052604090206001018160108110610dd457610dd4612d2c565b60020201546000878152600b602052604090206001600160a01b039091169063f242432a90309033906001018560108110610e1157610e11612d2c565b600202016001015460016040518563ffffffff1660e01b8152600401610e3a9493929190612da3565b600060405180830381600087803b158015610e5457600080fd5b505af1925050508015610e65575060015b610f52573d808015610e93576040519150601f19603f3d011682016040523d82523d6000602084013e610e98565b606091505b506000878152600b602052604090206001018260108110610ebb57610ebb612d2c565b60020201546000888152600b602052604090206001600160a01b03909116906342842e0e90309033906001018660108110610ef857610ef8612d2c565b60020201600101546040518463ffffffff1660e01b8152600401610f1e93929190612de6565b600060405180830381600087803b158015610f3857600080fd5b505af1158015610f4c573d6000803e3d6000fd5b50505050505b828160108110610f6457610f64612d2c565b6020020151600b60008881526020019081526020016000206001018260108110610f9057610f90612d2c565b82516002919091029190910180546001600160a01b0319166001600160a01b039092169190911781556020909101516001909101555b80610fd081612d8a565b915050610b50565b506000858152600b60205260409020610ff2848683612e6d565b506000858152600b6020526040902060210161100e8282612f27565b507fc5af4baabe0b43f9c9e905f83dd1191768ee8fd60b73a30fc23fceedce7eb3968585858585604051611046959493929190612fe0565b60405180910390a15050505050565b336000908152600f6020526040902054600e54811061108757604051636ea5241d60e01b815260040160405180910390fd5b600d805490600061109783612d8a565b9091555050600d546000908152600b602052604090206110b8858783612e6d565b50600d546000908152600b602052604090206021016110d78382612f27565b506110e4600d5484611afe565b6110f133600d5484611d10565b6110fc816001613040565b336000908152600f60205260409081902091909155600d5490517f1165ee153be167f0f334897324f2a433c03db8c7b736e9bfa08df0c866f1fb1091611046918890889088908890612fe0565b6111533383611782565b61116f5760405162461bcd60e51b81526004016105b490612cde565b61117b84848484611d43565b50505050565b606061118b61237a565b6000838152600b602052604090208054606091906001820190602183019083906111b490612caa565b80601f01602080910402602001604051908101604052809291908181526020018280546111e090612caa565b801561122d5780601f106112025761010080835404028352916020019161122d565b820191906000526020600020905b81548152906001019060200180831161121057829003601f168201915b50506040805161020081019091529396508592506010915060009050835b8282101561128c576040805180820190915260028302850180546001600160a01b03168252600190810154602080840191909152918352909201910161124b565b50505050915080805461129e90612caa565b80601f01602080910402602001604051908101604052809291908181526020018280546112ca90612caa565b80156113175780601f106112ec57610100808354040283529160200191611317565b820191906000526020600020905b8154815290600101906020018083116112fa57829003601f168201915b505050505090509250925092509193909250565b611333611988565b600c610b108282612f27565b606061134a826116ef565b6000611354611d76565b90506000815111611374576040518060200160405280600081525061139f565b8061137e84611d85565b60405160200161138f929190613053565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b606081516001600160401b038111156113ef576113ef61261d565b60405190808252806020026020018201604052801561142857816020015b6114156123b4565b81526020019060019003908161140d5790505b50905060005b825181101561162657600b600084838151811061144d5761144d612d2c565b6020026020010151815260200190815260200160002060405180606001604052908160008201805461147e90612caa565b80601f01602080910402602001604051908101604052809291908181526020018280546114aa90612caa565b80156114f75780601f106114cc576101008083540402835291602001916114f7565b820191906000526020600020905b8154815290600101906020018083116114da57829003601f168201915b50505091835250506040805161020081019091526020909101906001830160106000835b8282101561155c576040805180820190915260028302850180546001600160a01b03168252600190810154602080840191909152918352909201910161151b565b50505050815260200160218201805461157490612caa565b80601f01602080910402602001604051908101604052809291908181526020018280546115a090612caa565b80156115ed5780601f106115c2576101008083540402835291602001916115ed565b820191906000526020600020905b8154815290600101906020018083116115d057829003601f168201915b50505050508152505082828151811061160857611608612d2c565b6020026020010181905250808061161e90612d8a565b91505061142e565b50919050565b611634611988565b6001600160a01b0381166116995760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b4565b6116a2816119e2565b50565b60006001600160e01b0319821663780e9d6360e01b1480610481575061048182611e85565b60006001600160e01b03198216630271189760e51b14806104815750610481826116a5565b6116f881611ed5565b6116a25760405162461bcd60e51b81526004016105b490612d42565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611749826107cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061178e836107cf565b9050806001600160a01b0316846001600160a01b031614806117b557506117b581856113a6565b806117d95750836001600160a01b03166117ce84610519565b6001600160a01b0316145b949350505050565b826001600160a01b03166117f4826107cf565b6001600160a01b0316146118585760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105b4565b6001600160a01b0382166118ba5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105b4565b6118c5838383611ef2565b6118d0600082611714565b6001600160a01b03831660009081526003602052604081208054600192906118f9908490613082565b90915550506001600160a01b0382166000908152600360205260408120805460019290611927908490613040565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b0316331461092a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b4565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603611a915760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016105b4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60005b6010811015610655576000828260108110611b1e57611b1e612d2c565b6020020151516001600160a01b031614611cfe57818160108110611b4457611b44612d2c565b6020020151516001600160a01b031663f242432a3330858560108110611b6c57611b6c612d2c565b60200201516020015160016040518563ffffffff1660e01b8152600401611b969493929190612da3565b600060405180830381600087803b158015611bb057600080fd5b505af1925050508015611bc1575060015b611c8a573d808015611bef576040519150601f19603f3d011682016040523d82523d6000602084013e611bf4565b606091505b50828260108110611c0757611c07612d2c565b6020020151516001600160a01b03166342842e0e3330868660108110611c2f57611c2f612d2c565b6020020151602001516040518463ffffffff1660e01b8152600401611c5693929190612de6565b600060405180830381600087803b158015611c7057600080fd5b505af1158015611c84573d6000803e3d6000fd5b50505050505b818160108110611c9c57611c9c612d2c565b6020020151600b60008581526020019081526020016000206001018260108110611cc857611cc8612d2c565b82516002919091029190910180546001600160a01b0319166001600160a01b039092169190911781556020909101516001909101555b80611d0881612d8a565b915050611b01565b611d1a8383611faa565b611d2760008484846120e9565b6106555760405162461bcd60e51b81526004016105b490613095565b611d4e8484846117e1565b611d5a848484846120e9565b61117b5760405162461bcd60e51b81526004016105b490613095565b6060600c805461049690612caa565b606081600003611dac5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611dd65780611dc081612d8a565b9150611dcf9050600a836130fd565b9150611db0565b6000816001600160401b03811115611df057611df061261d565b6040519080825280601f01601f191660200182016040528015611e1a576020820181803683370190505b5090505b84156117d957611e2f600183613082565b9150611e3c600a86613111565b611e47906030613040565b60f81b818381518110611e5c57611e5c612d2c565b60200101906001600160f81b031916908160001a905350611e7e600a866130fd565b9450611e1e565b60006001600160e01b031982166380ac58cd60e01b1480611eb657506001600160e01b03198216635b5e139f60e01b145b8061048157506301ffc9a760e01b6001600160e01b0319831614610481565b6000908152600260205260409020546001600160a01b0316151590565b6001600160a01b038316611f4d57611f4881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f70565b816001600160a01b0316836001600160a01b031614611f7057611f7083826121ea565b6001600160a01b038216611f875761065581612287565b826001600160a01b0316826001600160a01b031614610655576106558282612336565b6001600160a01b0382166120005760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105b4565b61200981611ed5565b156120565760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105b4565b61206260008383611ef2565b6001600160a01b038216600090815260036020526040812080546001929061208b908490613040565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156121df57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061212d903390899088908890600401613125565b6020604051808303816000875af1925050508015612168575060408051601f3d908101601f1916820190925261216591810190613158565b60015b6121c5573d808015612196576040519150601f19603f3d011682016040523d82523d6000602084013e61219b565b606091505b5080516000036121bd5760405162461bcd60e51b81526004016105b490613095565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117d9565b506001949350505050565b600060016121f784610892565b6122019190613082565b600083815260076020526040902054909150808214612254576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061229990600190613082565b600083815260096020526040812054600880549394509092849081106122c1576122c1612d2c565b9060005260206000200154905080600883815481106122e2576122e2612d2c565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061231a5761231a613175565b6001900381819060005260206000200160009055905550505050565b600061234183610892565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6040518061020001604052806010905b604080518082019091526000808252602082015281526020019060019003908161238a5790505090565b6040518060600160405280606081526020016123ce61237a565b8152602001606081525090565b6001600160e01b0319811681146116a257600080fd5b60006020828403121561240357600080fd5b813561139f816123db565b60005b83811015612429578181015183820152602001612411565b50506000910152565b6000815180845261244a81602086016020860161240e565b601f01601f19169290920160200192915050565b60208152600061139f6020830184612432565b60006020828403121561248357600080fd5b5035919050565b80356001600160a01b03811681146124a157600080fd5b919050565b600080604083850312156124b957600080fd5b6124c28361248a565b946020939093013593505050565b6000806000606084860312156124e557600080fd5b6124ee8461248a565b92506124fc6020850161248a565b9150604084013590509250925092565b60006020828403121561251e57600080fd5b61139f8261248a565b60408152600061253a6040830185612432565b828103602084015261254c8185612432565b95945050505050565b6020808252825182820181905260009190848201906040850190845b8181101561258d57835183529284019291840191600101612571565b50909695505050505050565b600080604083850312156125ac57600080fd5b6125b58361248a565b9150602083013580151581146125ca57600080fd5b809150509250929050565b60008083601f8401126125e757600080fd5b5081356001600160401b038111156125fe57600080fd5b60208301915083602082850101111561261657600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156126555761265561261d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156126835761268361261d565b604052919050565b600082601f83011261269c57600080fd5b6040805161020081018181106001600160401b03821117156126c0576126c061261d565b8252806104008501868111156126d557600080fd5b855b8181101561271b578481890312156126ef5760008081fd5b6126f7612633565b6127008261248a565b815260208281013581830152908452929092019184016126d7565b50919695505050505050565b60006001600160401b038311156127405761274061261d565b612753601f8401601f191660200161265b565b905082815283838301111561276757600080fd5b828260208301376000602084830101529392505050565b600082601f83011261278f57600080fd5b61139f83833560208501612727565b600080600080600061046086880312156127b757600080fd5b8535945060208601356001600160401b03808211156127d557600080fd5b6127e189838a016125d5565b90965094508491506127f68960408a0161268b565b935061044088013591508082111561280d57600080fd5b5061281a8882890161277e565b9150509295509295909350565b600080600080610440858703121561283e57600080fd5b84356001600160401b038082111561285557600080fd5b612861888389016125d5565b9096509450849150612876886020890161268b565b935061042087013591508082111561288d57600080fd5b5061289a8782880161277e565b91505092959194509250565b600080600080608085870312156128bc57600080fd5b6128c58561248a565b93506128d36020860161248a565b92506040850135915060608501356001600160401b038111156128f557600080fd5b61289a8782880161277e565b60008083601f84011261291357600080fd5b5081356001600160401b0381111561292a57600080fd5b6020830191508360208260051b850101111561261657600080fd5b60008060008060008060008060a0898b03121561296157600080fd5b61296a8961248a565b975061297860208a0161248a565b965060408901356001600160401b038082111561299457600080fd5b6129a08c838d01612901565b909850965060608b01359150808211156129b957600080fd5b6129c58c838d01612901565b909650945060808b01359150808211156129de57600080fd5b506129eb8b828c016125d5565b999c989b5096995094979396929594505050565b8060005b601081101561117b57815180516001600160a01b031685526020908101518186015260409094019390910190600101612a03565b6000610440808352612a4b81840187612432565b9050612a5a60208401866129ff565b828103610420840152612a6d8185612432565b9695505050505050565b600060208284031215612a8957600080fd5b81356001600160401b03811115612a9f57600080fd5b8201601f81018413612ab057600080fd5b6117d984823560208401612727565b60008060408385031215612ad257600080fd5b612adb8361248a565b9150612ae96020840161248a565b90509250929050565b60006020808385031215612b0557600080fd5b82356001600160401b0380821115612b1c57600080fd5b818501915085601f830112612b3057600080fd5b813581811115612b4257612b4261261d565b8060051b9150612b5384830161265b565b8181529183018401918481019088841115612b6d57600080fd5b938501935b83851015612b8b57843582529385019390850190612b72565b98975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612c2557603f1989840301855281516104408151818652612be582870182612432565b91505088820151612bf88a8701826129ff565b509087015184820361042086015290612c118183612432565b968901969450505090860190600101612bbe565b509098975050505050505050565b60008060008060008060a08789031215612c4c57600080fd5b612c558761248a565b9550612c636020880161248a565b9450604087013593506060870135925060808701356001600160401b03811115612c8c57600080fd5b612c9889828a016125d5565b979a9699509497509295939492505050565b600181811c90821680612cbe57607f821691505b60208210810361162657634e487b7160e01b600052602260045260246000fd5b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201612d9c57612d9c612d74565b5060010190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260029082015261060f60f31b60c082015260e00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b601f82111561065557600081815260208120601f850160051c81016020861015612e315750805b601f850160051c820191505b81811015612e5057828155600101612e3d565b505050505050565b600019600383901b1c191660019190911b1790565b6001600160401b03831115612e8457612e8461261d565b612e9883612e928354612caa565b83612e0a565b6000601f841160018114612ec65760008515612eb45750838201355b612ebe8682612e58565b845550612f20565b600083815260209020601f19861690835b82811015612ef75786850135825560209485019460019092019101612ed7565b5086821015612f145760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81516001600160401b03811115612f4057612f4061261d565b612f5481612f4e8454612caa565b84612e0a565b602080601f831160018114612f835760008415612f715750858301515b612f7b8582612e58565b865550612e50565b600085815260208120601f198616915b82811015612fb257888601518255948401946001909101908401612f93565b5085821015612fd05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006104608783528060208401528581840152506104808587828501376000838701820152601f8601601f1916830161301c60408501876129ff565b818482030161044085015261303382820186612432565b9998505050505050505050565b8082018082111561048157610481612d74565b6000835161306581846020880161240e565b83519083019061307981836020880161240e565b01949350505050565b8181038181111561048157610481612d74565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261310c5761310c6130e7565b500490565b600082613120576131206130e7565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a6d90830184612432565b60006020828403121561316a57600080fd5b815161139f816123db565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220fe6bd6d1c0066b23295b775981700af89e2e2846c0d98a8b35c49d246460b47064736f6c63430008140033";

type BannersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BannersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Banners__factory extends ContractFactory {
  constructor(...args: BannersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    uri_: string,
    maxAmountOfMintedBannersPerAddress_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      uri_,
      maxAmountOfMintedBannersPerAddress_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    uri_: string,
    maxAmountOfMintedBannersPerAddress_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      uri_,
      maxAmountOfMintedBannersPerAddress_,
      overrides || {}
    ) as Promise<
      Banners & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Banners__factory {
    return super.connect(runner) as Banners__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BannersInterface {
    return new Interface(_abi) as BannersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Banners {
    return new Contract(address, _abi, runner) as unknown as Banners;
  }
}
