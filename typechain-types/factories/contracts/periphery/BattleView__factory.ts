/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BattleView,
  BattleViewInterface,
} from "../../../contracts/periphery/BattleView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getBattleCombinedData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "battleBeginTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "battleDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "battleEndDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "battleSettlementId",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "battleGamePosition",
            type: "uint64",
          },
          {
            internalType: "uint256[]",
            name: "side1Casualties",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "side2Casualties",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "side1UnitsAmount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "side2UnitsAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct BattleView.BattleCombinedData",
        name: "battleCombinedData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getBattleTimeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "beginTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "duration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "endTime",
            type: "uint64",
          },
        ],
        internalType: "struct IBattle.BattleTimeInfo",
        name: "battleTimeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bcf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063204c93c01461003b578063737add4a14610085575b600080fd5b61004e61004936600461086e565b6100a5565b6040805182516001600160401b03908116825260208085015182169083015292820151909216908201526060015b60405180910390f35b61009861009336600461086e565b610153565b60405161007c91906108cd565b604080516060810182526000808252602082018190529181019190915260008290506000806000836001600160a01b031663383f9ac36040518163ffffffff1660e01b8152600401606060405180830381865afa15801561010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012e91906109f5565b6001600160401b03928316885290821660208801521660408601525092949350505050565b60408051610140810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840181905260e084018190526101008401819052610120840152835163185b3dd560e11b81529351929385936001600160a01b038516926330b67baa92600480820193918290030181865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610a38565b90506000846001600160a01b031663143e55e06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610a38565b90506000826001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d69190610a38565b6001600160a01b0316635a28acb06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610313573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261033b9190810190610a6b565b9050600081516001600160401b0381111561035857610358610a55565b604051908082528060200260200182016040528015610381578160200160208202803683370190505b509050600082516001600160401b0381111561039f5761039f610a55565b6040519080825280602002602001820160405280156103c8578160200160208202803683370190505b509050600083516001600160401b038111156103e6576103e6610a55565b60405190808252806020026020018201604052801561040f578160200160208202803683370190505b509050600084516001600160401b0381111561042d5761042d610a55565b604051908082528060200260200182016040528015610456578160200160208202803683370190505b50905060005b85518110156106ce57600086828151811061047957610479610b28565b6020908102919091010151604051633856937960e01b815260016004820152602481018290529091506001600160a01b038b1690633856937990604401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190610b3e565b84838151811061050957610509610b28565b6020908102919091010152604051633856937960e01b815260026004820152602481018290526001600160a01b038b1690633856937990604401602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190610b3e565b83838151811061059657610596610b28565b60209081029190910101526040516346e4152560e11b815260016004820152602481018290526001600160a01b038b1690638dc82a4a90604401602060405180830381865afa1580156105ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106119190610b3e565b86838151811061062357610623610b28565b60209081029190910101526040516346e4152560e11b815260026004820152602481018290526001600160a01b038b1690638dc82a4a90604401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e9190610b3e565b8583815181106106b0576106b0610b28565b602090810291909101015250806106c681610b57565b91505061045c565b5060006106da8b6100a5565b905060008b6001600160a01b03166309218e916040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610b7e565b90506040518061014001604052808d6001600160a01b0316815260200183600001516001600160401b0316815260200183602001516001600160401b0316815260200183604001516001600160401b03168152602001896001600160a01b031663c4c31e85846040518263ffffffff1660e01b81526004016107d191906001600160401b0391909116815260200190565b602060405180830381865afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190610a38565b6001600160a01b03168152602001826001600160401b03168152602001878152602001868152602001858152602001848152509a5050505050505050505050919050565b6001600160a01b038116811461086b57600080fd5b50565b60006020828403121561088057600080fd5b813561088b81610856565b9392505050565b600081518084526020808501945080840160005b838110156108c2578151875295820195908201906001016108a6565b509495945050505050565b602081526108e76020820183516001600160a01b03169052565b6000602083015161090360408401826001600160401b03169052565b5060408301516001600160401b03811660608401525060608301516001600160401b03811660808401525060808301516001600160a01b03811660a08401525060a08301516001600160401b03811660c08401525060c08301516101408060e0850152610974610160850183610892565b915060e0850151601f196101008187860301818801526109948584610892565b9450808801519250506101208187860301818801526109b38584610892565b9088015187820390920184880152935090506109cf8382610892565b9695505050505050565b80516001600160401b03811681146109f057600080fd5b919050565b600080600060608486031215610a0a57600080fd5b610a13846109d9565b9250610a21602085016109d9565b9150610a2f604085016109d9565b90509250925092565b600060208284031215610a4a57600080fd5b815161088b81610856565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610a7e57600080fd5b82516001600160401b0380821115610a9557600080fd5b818501915085601f830112610aa957600080fd5b815181811115610abb57610abb610a55565b8060051b604051601f19603f83011681018181108582111715610ae057610ae0610a55565b604052918252848201925083810185019188831115610afe57600080fd5b938501935b82851015610b1c57845184529385019392850192610b03565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b5057600080fd5b5051919050565b600060018201610b7757634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610b9057600080fd5b61088b826109d956fea264697066735822122016414f70756013ad9abd55a17418ab93a0adc6f23d25ef991d868e195fa98bb464736f6c63430008140033";

type BattleViewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleViewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleView__factory extends ContractFactory {
  constructor(...args: BattleViewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BattleView & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BattleView__factory {
    return super.connect(runner) as BattleView__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleViewInterface {
    return new Interface(_abi) as BattleViewInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BattleView {
    return new Contract(address, _abi, runner) as unknown as BattleView;
  }
}
