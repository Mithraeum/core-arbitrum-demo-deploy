/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  RewardPool,
  RewardPoolInterface,
} from "../../../../contracts/core/rewardPool/RewardPool";

const _abi = [
  {
    inputs: [],
    name: "NoTokensWillBeReceived",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughTokensLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TokensToBeReceivedLessThanMinimumRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToReceiveEther",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newEthBalance",
        type: "uint256",
      },
    ],
    name: "EthBalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLastSyncedTokenBalance",
        type: "uint256",
      },
    ],
    name: "LastSyncedTokenBalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newToBeRepaidTokenAmount",
        type: "uint256",
      },
    ],
    name: "ToBeRepaidTokenAmountUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "defaultTokenPrice",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensAmountOut",
        type: "uint256",
      },
    ],
    name: "getIngotsAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ingotsAmountIn",
        type: "uint256",
      },
    ],
    name: "getTokensAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToInvest",
        type: "uint256",
      },
    ],
    name: "investIntoPrizePool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSyncedTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resourcesOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ingotsAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTokensToReceive",
        type: "uint256",
      },
    ],
    name: "swapIngotsForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toBeRepaidTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRepayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612251806100206000396000f3fe6080604052600436106100905760003560e01c806318e12e031461017857806319ab453c146101aa5780631d29daa3146101cc5780632495b728146101df57806330b67baa146101ff5780637489b451146102325780638096d7dd14610247578063a9d75dac14610275578063a9e6beb814610295578063b0786e23146102ab578063eb91d37e146102c157600080fd5b366101735760006001600160a01b0316600060029054906101000a90046001600160a01b03166001600160a01b031663c1897e346040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101179190611eb0565b6001600160a01b03161461013e57604051638e2d9fb960e01b815260040160405180910390fd5b6040514781527fe968090a83cd0c78dcb9e891725da982db6cdbe2c46d6a3c88c132b4a365e13f9060200160405180910390a1005b600080fd5b34801561018457600080fd5b5060015461019290600f0b81565b604051600f9190910b81526020015b60405180910390f35b3480156101b657600080fd5b506101ca6101c5366004611ecd565b6102d6565b005b6101ca6101da366004611eea565b610418565b3480156101eb57600080fd5b506101ca6101fa366004611f03565b6106d9565b34801561020b57600080fd5b50600054610225906201000090046001600160a01b031681565b6040516101a19190611f38565b34801561023e57600080fd5b506101ca610cdc565b34801561025357600080fd5b50610267610262366004611eea565b610de9565b6040519081526020016101a1565b34801561028157600080fd5b50610267610290366004611eea565b610e0a565b3480156102a157600080fd5b5061026760035481565b3480156102b757600080fd5b5061026760025481565b3480156102cd57600080fd5b50610267610e25565b600054610100900460ff16158080156102f65750600054600160ff909116105b806103105750303b158015610310575060005460ff166001145b6103785760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561039b576000805461ff0019166101001790555b6103a48261112c565b6103ae60016111c1565b600180546001600160801b0319166001600160801b03929092169190911790558015610414576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b346000816104246111df565b61042e9190611f62565b90506000600354826104409190611f62565b9050801561057d576000610456600254836112e4565b9050801561057b5761053f600060029054906101000a90046001600160a01b03166001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190611eb0565b6001600160a01b031663271530506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190611eb0565b826112fc565b80600260008282546105519190611f62565b90915550506002546040519081526000805160206121dc8339815191529060200160405180910390a15b505b60008060029054906101000a90046001600160a01b03166001600160a01b031663c1897e346040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190611eb0565b90506001600160a01b0381161580159061060e57503415155b1561062c57604051638e2d9fb960e01b815260040160405180910390fd5b6001600160a01b03811661065757346002600082825461064c9190611f75565b9091555061067b9050565b610663813330886113d6565b84600260008282546106759190611f75565b90915550505b6000805160206121dc83398151915260025460405161069c91815260200190565b60405180910390a1506106ad6111df565b60038190556040519081526000805160206121fc8339815191529060200160405180910390a150505050565b600054600160b01b900460ff161515600103610708576040516306fda65d60e31b815260040160405180910390fd5b6000805460ff60b01b1916600160b01b17815580806107256111df565b61072f9190611f62565b90506000600354826107419190611f62565b905080156107f3576000610757600254836112e4565b905080156107f1576107b5600060029054906101000a90046001600160a01b03166001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b80600260008282546107c79190611f62565b90915550506002546040519081526000805160206121dc8339815191529060200160405180910390a15b505b60006107fd611434565b90506000610809610e25565b905060006108156111df565b9050600061082489858561153b565b9050818111801561083457508782115b1561083c5750805b8060000361085d57604051634e3eebe360e01b815260040160405180910390fd5b8781101561087e57604051631b22b33160e01b815260040160405180910390fd5b8188118061088a575081155b156108a8576040516376592c6f60e01b815260040160405180910390fd5b60006108b582868661155a565b600080546040805163704f63a160e01b815290519394509192620100009091046001600160a01b03169163720a70bd91839163704f63a19160048083019260209291908290030181865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190611f88565b6040518263ffffffff1660e01b815260040161095391815260200190565b602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190611eb0565b6040805180820182526005815264125391d3d560da1b6020909101525163912929df60e01b81527ff4d3d98b93a17290e7883bbc86b83d603b27efc328d7873b3fc648501d83e57260048201526001600160a01b03919091169063912929df90602401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611eb0565b90506001600160a01b038c16610ac1576040516323b872dd60e01b81526001600160a01b038216906323b872dd90610a7890339030908790600401611fa1565b6020604051808303816000875af1158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190611fc5565b50610b98565b60405163dd8aaa4f60e01b81526001600160a01b0382169063dd8aaa4f90610af1908f9033908790600401611fa1565b600060405180830381600087803b158015610b0b57600080fd5b505af1158015610b1f573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b03841692506323b872dd9150610b53908f9030908790600401611fa1565b6020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190611fc5565b505b610ba233846112fc565b610baa6111df565b158015610c2b5750600060029054906101000a90046001600160a01b03166001600160a01b03166344d9bc5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190611f88565b155b15610c9357600054604051635a4482d160e01b8152426004820152620100009091046001600160a01b031690635a4482d190602401600060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b505050505b505050505050610ca16111df565b60038190556040519081526000805160206121fc8339815191529060200160405180910390a150506000805460ff60b01b1916905550505050565b60008081610ce86111df565b610cf29190611f62565b9050600060035482610d049190611f62565b90508015610db6576000610d1a600254836112e4565b90508015610db457610d78600060029054906101000a90046001600160a01b03166001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b8060026000828254610d8a9190611f62565b90915550506002546040519081526000805160206121dc8339815191529060200160405180910390a15b505b610dbe6111df565b60038190556040519081526000805160206121fc8339815191529060200160405180910390a1505050565b6000610e0482610df7611434565b610dff610e25565b61155a565b92915050565b6000610e0482610e18611434565b610e20610e25565b61153b565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663704f63a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190611f88565b6000805460405163720a70bd60e01b8152600481018490529293509091620100009091046001600160a01b03169063720a70bd90602401602060405180830381865afa158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190611eb0565b6040805180820182526005815264125391d3d560da1b6020909101525163912929df60e01b81527ff4d3d98b93a17290e7883bbc86b83d603b27efc328d7873b3fc648501d83e57260048201529091506000906001600160a01b0383169063912929df90602401602060405180830381865afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf9190611eb0565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190611fe7565b61103090600a6120ee565b9050600061111685856001600160a01b031663d8270dce6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a9190611f88565b600060029054906101000a90046001600160a01b03166001600160a01b0316633c8ca83d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190611f88565b61159f565b9050611122818361163c565b9550505050505090565b600054610100900460ff166111975760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161036f565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6000677fffffffffffffff8211156111d857600080fd5b5060401b90565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663c1897e346040518163ffffffff1660e01b8152600401602060405180830381865afa158015611235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112599190611eb0565b90506001600160a01b038116156112dc576040516370a0823160e01b81526001600160a01b038216906370a0823190611296903090600401611f38565b602060405180830381865afa1580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d79190611f88565b6112de565b475b91505090565b60008183106112f357816112f5565b825b9392505050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663c1897e346040518163ffffffff1660e01b8152600401602060405180830381865afa158015611350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113749190611eb0565b90506001600160a01b0381166113c65761138e83836116a7565b6040514781527fe968090a83cd0c78dcb9e891725da982db6cdbe2c46d6a3c88c132b4a365e13f9060200160405180910390a1505050565b6113d18184846117bd565b505050565b61142e846323b872dd60e01b8585856040516024016113f793929190611fa1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117ed565b50505050565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663c1897e346040518163ffffffff1660e01b8152600401602060405180830381865afa15801561148a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ae9190611eb0565b90506001600160a01b0381161561152c57806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115219190611fe7565b6112d790600a6120ee565b670de0b6b3a764000091505090565b60008161154884866120fd565b611552919061212a565b949350505050565b60008061156785846120fd565b9050611573848261213e565b1561159557611582848261212a565b61158d906001611f75565b9150506112f5565b61158d848261212a565b6000806115b56115af60026111c1565b866118bf565b6001549091506000906115cb90600f0b83611ae2565b905060006115d98686611b3a565b90504281106115ec575091506112f59050565b60006115f88242611f62565b90506000611614662386f3378d6053662386f26fc10000611b4a565b9050600061162282846118bf565b905061162e8582611b84565b9a9950505050505050505050565b60008160000361164e57506000610e04565b600083600f0b121561165f57600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b0381111561168e57600080fd5b60401b811981111561169f57600080fd5b019392505050565b804710156116f75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161036f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611744576040519150601f19603f3d011682016040523d82523d6000602084013e611749565b606091505b50509050806113d15760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b606482015260840161036f565b6040516001600160a01b0383166024820152604481018290526113d190849063a9059cbb60e01b906064016113f7565b6000611842826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bba9092919063ffffffff16565b8051909150156113d157808060200190518101906118609190611fc5565b6113d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161036f565b600080600084600f0b1280156118d85750826001166001145b905060008085600f0b126118ec57846118f1565b846000035b6001600160801b03169050600160801b600160401b821161198657603f82901b91505b841561197e576001851615611929578102607f1c5b908002607f1c90600285161561193f578102607f1c5b908002607f1c906004851615611955578102607f1c5b908002607f1c90600885161561196b578102607f1c5b60049490941c93908002607f1c90611914565b60401c611a9c565b603f600160601b8310156119a05760209290921b91601f19015b600160701b8310156119b85760109290921b91600f19015b600160781b8310156119d05760089290921b91600719015b6001607c1b8310156119e85760049290921b91600319015b6001607e1b831015611a005760029290921b91600119015b6001607f1b831015611a185760019290921b91600019015b60005b8615611a855760408210611a2e57600080fd5b6001871615611a5457918302607f1c918101600160801b831115611a5457600192831c92015b928002607f1c9260019190911b90600160801b8410611a7957600193841c9391909101905b600187901c9650611a1b565b60408110611a9257600080fd5b6040039190911c90505b600083611aa95781611aae565b816000035b905060016001607f1b03198112801590611acf575060016001607f1b038113155b611ad857600080fd5b9695505050505050565b600081600f0b600003611af457600080fd5b600082600f0b604085600f0b901b81611b0f57611b0f612114565b05905060016001607f1b03198112801590611b31575060016001607f1b038113155b6112f557600080fd5b6000818310156112f357816112f5565b600081600003611b5957600080fd5b6000611b658484611bc9565b905060016001607f1b036001600160801b03821611156112f557600080fd5b6000600f83810b9083900b0260401d60016001607f1b03198112801590611b31575060016001607f1b038113156112f557600080fd5b60606115528484600085611d2e565b600081600003611bd857600080fd5b60006001600160c01b038411611c035782604085901b81611bfb57611bfb612114565b049050611d1a565b60c084811c6401000000008110611c1c576020918201911c5b620100008110611c2e576010918201911c5b6101008110611c3f576008918201911c5b60108110611c4f576004918201911c5b60048110611c5f576002918201911c5b60028110611c6e576001820191505b60bf820360018603901c6001018260ff0387901b81611c8f57611c8f612114565b0492506001600160801b03831115611ca657600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015611cd2576001820391505b608084901b92900382811015611ce9576001820391505b829003608084901c8214611cff57611cff612152565b888181611d0e57611d0e612114565b04870196505050505050505b6001600160801b038111156112f557600080fd5b606082471015611d8f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161036f565b6001600160a01b0385163b611de65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161036f565b600080866001600160a01b03168587604051611e02919061218c565b60006040518083038185875af1925050503d8060008114611e3f576040519150601f19603f3d011682016040523d82523d6000602084013e611e44565b606091505b5091509150611e54828286611e5f565b979650505050505050565b60608315611e6e5750816112f5565b825115611e7e5782518084602001fd5b8160405162461bcd60e51b815260040161036f91906121a8565b6001600160a01b0381168114611ead57600080fd5b50565b600060208284031215611ec257600080fd5b81516112f581611e98565b600060208284031215611edf57600080fd5b81356112f581611e98565b600060208284031215611efc57600080fd5b5035919050565b600080600060608486031215611f1857600080fd5b8335611f2381611e98565b95602085013595506040909401359392505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e0457610e04611f4c565b80820180821115610e0457610e04611f4c565b600060208284031215611f9a57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611fd757600080fd5b815180151581146112f557600080fd5b600060208284031215611ff957600080fd5b815160ff811681146112f557600080fd5b600181815b8085111561204557816000190482111561202b5761202b611f4c565b8085161561203857918102915b93841c939080029061200f565b509250929050565b60008261205c57506001610e04565b8161206957506000610e04565b816001811461207f5760028114612089576120a5565b6001915050610e04565b60ff84111561209a5761209a611f4c565b50506001821b610e04565b5060208310610133831016604e8410600b84101617156120c8575081810a610e04565b6120d2838361200a565b80600019048211156120e6576120e6611f4c565b029392505050565b60006112f560ff84168361204d565b8082028115828204841417610e0457610e04611f4c565b634e487b7160e01b600052601260045260246000fd5b60008261213957612139612114565b500490565b60008261214d5761214d612114565b500690565b634e487b7160e01b600052600160045260246000fd5b60005b8381101561218357818101518382015260200161216b565b50506000910152565b6000825161219e818460208701612168565b9190910192915050565b60208152600082518060208401526121c7816040850160208701612168565b601f01601f1916919091016040019291505056fe38026f0733511c2e2735c2b8cefaf895b5f4ce408a17d1bd38fcbdaec6f1255e80ea096b9def4b66fbd7cbb7acc80fbf1ed860a2d4e57b2acb5a99c7ad77411fa2646970667358221220f05bbd1b4ad664aac41ccb20228dae751560732223cc90c1efce8644d31a3e2d64736f6c63430008140033";

type RewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardPool__factory extends ContractFactory {
  constructor(...args: RewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RewardPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardPool__factory {
    return super.connect(runner) as RewardPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolInterface {
    return new Interface(_abi) as RewardPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RewardPool {
    return new Contract(address, _abi, runner) as unknown as RewardPool;
  }
}
