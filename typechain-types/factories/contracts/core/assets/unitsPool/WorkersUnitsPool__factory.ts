/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  WorkersUnitsPool,
  WorkersUnitsPoolInterface,
} from "../../../../../contracts/core/assets/unitsPool/WorkersUnitsPool";

const _abi = [
  {
    inputs: [],
    name: "CannotHireUnitsDueToTheirCostIsHigherThanMaxTokensToSellSpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsExceedingArmyUnitsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsExceedingTransactionLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsForArmyWhichSettlementDoesNotBelongToRelatedRegion",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsInvalidUnitsToBuySpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsWhileArmyIsManeuvering",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsWhileArmyIsNotOnHomePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotHireUnitsWhileArmyIsStunned",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMightyCreator",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRelatedRegion",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRulerOrWorldAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWorldAssetFromSameEra",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "armyAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "boughtUnitsAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spentTokensAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUnitPrice",
        type: "uint256",
      },
    ],
    name: "UnitsBought",
    type: "event",
  },
  {
    inputs: [],
    name: "assetGroupId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetTypeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unitsToBuy",
        type: "uint256",
      },
    ],
    name: "calculateTokensForExactUnits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "era",
    outputs: [
      {
        internalType: "contract IEra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eraNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPurchaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relatedRegion",
    outputs: [
      {
        internalType: "contract IRegion",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokensOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unitsToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokensToSell",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactUnits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokensOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unitsToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokensToSell",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactUnitsByRegion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unitPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unitTypeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldAssetFactory",
    outputs: [
      {
        internalType: "contract IWorldAssetFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611753806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80630b4e99c3146100ca578063143e55e0146100e557806330b67baa146100fa5780634ddf47d4146101025780635920c5431461011757806377258451146101205780637b103999146101335780637d884c741461013b57806384ba89e314610143578063a7d6911c1461014b578063c14bafb114610173578063e6c15c991461017c578063e73faa2d14610195578063ece56a1a1461019e578063fb75b12c146101a6575b600080fd5b6100d26101b9565b6040519081526020015b60405180910390f35b6100ed6101f6565b6040516100dc9190611316565b6100ed61027a565b610115610110366004611370565b610284565b005b6100d260025481565b6100d261012e36600461141c565b6103e7565b6100ed61041e565b6100d2610465565b6100d26104a2565b61015e610159366004611477565b6104df565b604080519283526020830191909152016100dc565b6100d260015481565b6000546100ed906201000090046001600160a01b031681565b6100d260035481565b6100ed6104fc565b6100d26101b4366004611490565b610543565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020607a60208301853c602001519392505050565b600061020061027a565b6001600160a01b031663720a70bd610216610465565b6040518263ffffffff1660e01b815260040161023491815260200190565b602060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027591906114d6565b905090565b6000610275610571565b600054610100900460ff16158080156102a45750600054600160ff909116105b806102be5750303b1580156102be575060005460ff166001145b6103255760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015610348576000805461ff0019166101001790555b6000808380602001905181019061035f91906114f3565b600080546001600160a01b03909316620100000262010000600160b01b031990931692909217909155600255505042600155670de0b6b3a764000060035580156103e3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006103f16105ae565b6103f96106df565b84846104058282610712565b6104128888888888610836565b98975050505050505050565b600061042861027a565b6001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b604080516020808252818301909252600091309183918291906020820181803683370190505090506020609a60208301853c602001519392505050565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020605a60208301853c602001519392505050565b600080600354836104f09190611537565b60035491509150915091565b600061050661041e565b6001600160a01b031663ece56a1a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b600061054d6105ae565b33846105598282610712565b6105668733888888610836565b979650505050505050565b604080516014808252818301909252600091309183918291906020820181803683370190505090506014602a60208301853c601401519392505050565b60006105b861027a565b6001600160a01b0316633c8ca83d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061154e565b9050600061062561027a565b6001600160a01b03166344d9bc5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610686919061154e565b905081158061069457508142105b156106b25760405163a00eda6960e01b815260040160405180910390fd5b80158015906106c15750804210155b156103e35760405163a00eda6960e01b815260040160405180910390fd5b6000546201000090046001600160a01b0316331461071057604051630ca829d560e31b815260040160405180910390fd5b565b604051631b0b969d60e01b81526001600160a01b03821690631b0b969d9061073e908590600401611316565b602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611567565b1580156108185750600061079161027a565b6001600160a01b031663ebbe80346107a7610465565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0386166024820152604401602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610816919061154e565b145b156103e357604051636b6ee4e160e11b815260040160405180910390fd5b6000808490506000816001600160a01b031663f10e38af6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a091906114d6565b9050816001600160a01b031663aef281d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b50505050806001600160a01b0316631d8557d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b50505050806001600160a01b0316638ff54e356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109aa9190611567565b156109c85760405163100c419560e01b815260040160405180910390fd5b806001600160a01b031663bc3b0c4b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190611567565b610a475760405163a854541160e01b815260040160405180910390fd5b841580610a635750610a6185670de0b6b3a7640000610ded565b155b15610a815760405163a700f36360e01b815260040160405180910390fd5b600060029054906101000a90046001600160a01b03166001600160a01b0316826001600160a01b031663e6c15c996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0291906114d6565b6001600160a01b031614610b295760405163194d6c7d60e21b815260040160405180910390fd5b610b338282610e03565b851115610b5357604051633181b8d360e01b815260040160405180910390fd5b610b5b61041e565b6001600160a01b031663c15466dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc919061154e565b851115610bdc576040516302d67e2960e41b815260040160405180910390fd5b600080610bf4610159670de0b6b3a76400008961159f565b9150915085821115610c195760405163331a433f60e11b815260040160405180910390fd5b6000836001600160a01b0316638e55bdc06040518163ffffffff1660e01b81526004016040805180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c91906115cf565b9150506001600160401b03811615610ca7576040516384cc247f60e01b815260040160405180910390fd5b6000610cb1610ee6565b60405163079cc67960e41b81529091506001600160a01b038216906379cc679090610ce2908d908890600401611602565b600060405180830381600087803b158015610cfc57600080fd5b505af1158015610d10573d6000803e3d6000fd5b50505050610d1c610f2d565b6001600160a01b03166340c10f19868b6040518363ffffffff1660e01b8152600401610d49929190611602565b600060405180830381600087803b158015610d6357600080fd5b505af1158015610d77573d6000803e3d6000fd5b50505060038490555042600155604080516001600160a01b03808e168252871660208201529081018a905260608101859052608081018490527f2cdc858ec98ef184c62b1a5ad6d7fcfd26ec15fd28a95398a046e9593bb5ce1d9060a00160405180910390a150969a9950505050505050505050565b6000610df9828461161b565b1590505b92915050565b6000806000610e1185610f66565b915091506000610e2085611158565b90506000610ec683670de0b6b3a7640000610e3961041e565b6001600160a01b031663a6896cdb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a919061154e565b610ea49088611537565b610eae919061159f565b610eb8919061159f565b670de0b6b3a76400006112f8565b9050808210610edc576000945050505050610dfd565b610566828261162f565b6000610ef06101f6565b6001600160a01b031663cabb62f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b6000610f376101f6565b6001600160a01b031663feae7dc36002546040518263ffffffff1660e01b815260040161023491815260200190565b6040805180820182526004808252631193d49560e21b6020909201919091529051631b973c5760e21b8152600091829182916001600160a01b03861691636e5cf15c91610fd9917f2911d5ca388af24ed7f391a4eb24469bc0fd8935cd73bb1075ca7e702a42eb19910190815260200190565b602060405180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a91906114d6565b9050806001600160a01b0316637633a22c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561105a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107e919061154e565b816001600160a01b031663e91bde76836001600160a01b0316638545bc586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef919061154e565b6040518263ffffffff1660e01b815260040161110d91815260200190565b602060405180830381865afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e919061154e565b9250925050915091565b60008061116361041e565b6001600160a01b0316635a28acb06040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111c89190810190611642565b90506000805b82518110156112f0576111df6101f6565b6001600160a01b031663feae7dc38483815181106111ff576111ff6116db565b60200260200101516040518263ffffffff1660e01b815260040161122591815260200190565b602060405180830381865afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126691906114d6565b6001600160a01b03166370a08231866040518263ffffffff1660e01b81526004016112919190611316565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061154e565b6112dc90836116f1565b9150806112e881611704565b9150506111ce565b509392505050565b600081611305818561159f565b61130f9190611537565b9392505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156113685761136861132a565b604052919050565b6000602080838503121561138357600080fd5b82356001600160401b038082111561139a57600080fd5b818501915085601f8301126113ae57600080fd5b8135818111156113c0576113c061132a565b6113d2601f8201601f19168501611340565b915080825286848285010111156113e857600080fd5b8084840185840137600090820190930192909252509392505050565b6001600160a01b038116811461141957600080fd5b50565b600080600080600060a0868803121561143457600080fd5b853561143f81611404565b9450602086013561144f81611404565b9350604086013561145f81611404565b94979396509394606081013594506080013592915050565b60006020828403121561148957600080fd5b5035919050565b600080600080608085870312156114a657600080fd5b84356114b181611404565b935060208501356114c181611404565b93969395505050506040820135916060013590565b6000602082840312156114e857600080fd5b815161130f81611404565b6000806040838503121561150657600080fd5b825161151181611404565b6020939093015192949293505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610dfd57610dfd611521565b60006020828403121561156057600080fd5b5051919050565b60006020828403121561157957600080fd5b8151801515811461130f57600080fd5b634e487b7160e01b600052601260045260246000fd5b6000826115ae576115ae611589565b500490565b80516001600160401b03811681146115ca57600080fd5b919050565b600080604083850312156115e257600080fd5b6115eb836115b3565b91506115f9602084016115b3565b90509250929050565b6001600160a01b03929092168252602082015260400190565b60008261162a5761162a611589565b500690565b81810381811115610dfd57610dfd611521565b6000602080838503121561165557600080fd5b82516001600160401b038082111561166c57600080fd5b818501915085601f83011261168057600080fd5b8151818111156116925761169261132a565b8060051b91506116a3848301611340565b81815291830184019184810190888411156116bd57600080fd5b938501935b83851015610412578451825293850193908501906116c2565b634e487b7160e01b600052603260045260246000fd5b80820180821115610dfd57610dfd611521565b60006001820161171657611716611521565b506001019056fea26469706673582212202a29f9b395413d34853f5f731af68c86211db13a1e5af15345286963aec115b364736f6c63430008140033";

type WorkersUnitsPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkersUnitsPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkersUnitsPool__factory extends ContractFactory {
  constructor(...args: WorkersUnitsPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WorkersUnitsPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorkersUnitsPool__factory {
    return super.connect(runner) as WorkersUnitsPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkersUnitsPoolInterface {
    return new Interface(_abi) as WorkersUnitsPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorkersUnitsPool {
    return new Contract(address, _abi, runner) as unknown as WorkersUnitsPool;
  }
}
