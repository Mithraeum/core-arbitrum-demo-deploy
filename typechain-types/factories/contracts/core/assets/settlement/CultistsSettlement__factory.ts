/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  CultistsSettlement,
  CultistsSettlementInterface,
} from "../../../../../contracts/core/assets/settlement/CultistsSettlement";

const _abi = [
  {
    inputs: [],
    name: "Disabled",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernorCannotBeAddedIfSenderNotSettlementOwnerOrAnotherGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMightyCreator",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRulerOrWorldAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySettlementOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWorldAssetFromSameEra",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotBeDestroyedIfItsAlreadyRebuilt",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotBeDestroyedIfItsNotRotten",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotDecreaseCorruptionIndexViaPaymentInInactiveEra",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotDecreaseCorruptionIndexViaPaymentWrongParamProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotSendWorkersToBuildingOverMaximumAllowedCapacity",
    type: "error",
  },
  {
    inputs: [],
    name: "SettlementCannotSendWorkersWithFractions",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "armyAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "position",
        type: "uint64",
      },
    ],
    name: "ArmyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buildingAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "buildingTypeId",
        type: "bytes32",
      },
    ],
    name: "BuildingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Destroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentGovernorsGeneration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "modifiedByAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newStatus",
        type: "bool",
      },
    ],
    name: "GovernorStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newGovernorsGeneration",
        type: "uint256",
      },
    ],
    name: "GovernorsGenerationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "siegeAddress",
        type: "address",
      },
    ],
    name: "SiegeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governorAddress",
        type: "address",
      },
    ],
    name: "addGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "army",
    outputs: [
      {
        internalType: "contract IArmy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetGroupId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetTypeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resourcesOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "buildingAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "workersAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "resourceTypeIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "resourcesAmounts",
        type: "uint256[]",
      },
    ],
    name: "assignResourcesAndWorkersToBuilding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bannerId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "position",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "prosperityStake",
        type: "uint256",
      },
    ],
    name: "beginTileCapture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "buildingTypeId",
        type: "bytes32",
      },
    ],
    name: "buildings",
    outputs: [
      {
        internalType: "contract IBuilding",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "position",
        type: "uint64",
      },
    ],
    name: "cancelTileCapture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "position",
        type: "uint64",
      },
    ],
    name: "claimCapturedTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentGovernorsGeneration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseProducedCorruptionIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroyRottenSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "era",
    outputs: [
      {
        internalType: "contract IEra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eraNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prosperityAmount",
        type: "uint256",
      },
    ],
    name: "extendProsperity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendedProsperityAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSettlementOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "position",
        type: "uint64",
      },
    ],
    name: "giveUpCapturedTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "isGovernor",
        type: "address",
      },
    ],
    name: "governors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseProducedCorruptionIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRottenSettlement",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "potentialRuler",
        type: "address",
      },
    ],
    name: "isRuler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
    ],
    name: "payToDecreaseCorruptionIndex",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "position",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "producedCorruptionIndex",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relatedRegion",
    outputs: [
      {
        internalType: "contract IRegion",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governorAddress",
        type: "address",
      },
    ],
    name: "removeGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeGovernors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "siege",
    outputs: [
      {
        internalType: "contract ISiege",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "workersToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProsperityToSell",
        type: "uint256",
      },
    ],
    name: "swapProsperityForExactWorkers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateFortHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateProsperityAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceTypeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawResources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldAssetFactory",
    outputs: [
      {
        internalType: "contract IWorldAssetFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ecf806100206000396000f3fe6080604052600436106101e55760003560e01c806384ba89e311610103578063c023c0951161009b578063c023c09514610443578063c433a16014610443578063c68cf9061461045e578063ca82504314610251578063d63a68ec146103c0578063d9bbf2a814610443578063e6c15c9914610479578063ece56a1a1461049f578063eecdac8814610320578063f10e38af146104b457600080fd5b806384ba89e3146103d5578063977a2d13146103ea578063996bebda146103ff5780639dd26bd2146103c0578063aef281d31461030b578063b5acd456146102e1578063b942d2c11461040d578063bc2a493a14610428578063bea42f9c1461030b57600080fd5b80633c4a25d0116101815780633c4a25d0146103205780633fa95a4a1461025157806341b989d91461033b5780634ddf47d41461035657806352fa2c8e1461030b5780636e5cf15c146103765780637b103999146103965780637d884c74146103ab5780637e6fc4f0146103c05780637fd4d5e5146103c057600080fd5b806309218e91146101ea5780630b4e99c31461022e57806310592e2414610251578063143e55e01461027357806316e8d7ff146102955780631b0b969d146102b05780632de7e9b0146102e157806330b67baa146102f65780633133f7d91461030b575b600080fd5b3480156101f657600080fd5b5060015461021190600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b34801561023a57600080fd5b506102436104d4565b604051908152602001610225565b34801561025d57600080fd5b5061027161026c366004610a24565b610511565b005b34801561027f57600080fd5b5061028861052a565b6040516102259190610a3d565b3480156102a157600080fd5b5061027161026c366004610a51565b3480156102bc57600080fd5b506102d16102cb366004610a8b565b50600090565b6040519015158152602001610225565b3480156102ed57600080fd5b506102886105ae565b34801561030257600080fd5b506102886105c9565b34801561031757600080fd5b50610271610511565b34801561032c57600080fd5b5061027161026c366004610a8b565b34801561034757600080fd5b5061027161026c366004610aaf565b34801561036257600080fd5b50610271610371366004610b2d565b6105d3565b34801561038257600080fd5b50610288610391366004610a24565b6105ae565b3480156103a257600080fd5b50610288610753565b3480156103b757600080fd5b5061024361079a565b3480156103cc57600080fd5b506102436105ae565b3480156103e157600080fd5b506102436107d7565b3480156103f657600080fd5b506102d16105ae565b61027161026c366004610a24565b34801561041957600080fd5b506102d1610391366004610bc1565b34801561043457600080fd5b5061027161026c366004610c7f565b34801561044f57600080fd5b5061027161026c366004610d7d565b34801561046a57600080fd5b5061027161026c366004610d9a565b34801561048557600080fd5b50600054610288906201000090046001600160a01b031681565b3480156104ab57600080fd5b50610288610814565b3480156104c057600080fd5b50600154610288906001600160a01b031681565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020607a60208301853c602001519392505050565b604051633ac4266d60e11b815260040160405180910390fd5b60006105346105c9565b6001600160a01b031663720a70bd61054a61079a565b6040518263ffffffff1660e01b815260040161056891815260200190565b602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610dc6565b905090565b6000604051633ac4266d60e11b815260040160405180910390fd5b60006105a961085b565b600054610100900460ff16158080156105f35750600054600160ff909116105b8061060d5750303b15801561060d575060005460ff166001145b6106745760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015610697576000805461ff0019166101001790555b6000806000848060200190518101906106b09190610de3565b6000805462010000600160b01b031916620100006001600160a01b038516021790556001805467ffffffffffffffff60a01b1916600160a01b6001600160401b0384160217905591945092509050610706610898565b505050801561074f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600061075d6105c9565b6001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b604080516020808252818301909252600091309183918291906020820181803683370190505090506020609a60208301853c602001519392505050565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020605a60208301853c602001519392505050565b600061081e610753565b6001600160a01b031663ece56a1a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b604080516014808252818301909252600091309183918291906020820181803683370190505090506014602a60208301853c601401519392505050565b60006108a2610814565b6001600160a01b031663c19755fd6108b86105c9565b6108c061079a565b604080518082018252600481526361726d7960e01b602091820152815180830183526005815264424153494360d81b9082015290517f1dfa95949f0b18e5ee916f85d0296148ce2f94b82b74404d6a5d6e64ed9b8c5f917fdc0ae866100b2876ab26eb62a50ca2cd083944f439e6d78aab2fc402e669e9ee9161094591309101610a3d565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610974959493929190610e26565b6020604051808303816000875af1158015610993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b79190610dc6565b600180546001600160a01b0319166001600160a01b0383169081179182905560408051918252600160a01b9092046001600160401b031660208201529192507f36e6a2ad1103b62e30506738cea4d983c8be134a35b666a8403fd1469c675451910160405180910390a150565b600060208284031215610a3657600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060408385031215610a6457600080fd5b50508035926020909101359150565b6001600160a01b0381168114610a8857600080fd5b50565b600060208284031215610a9d57600080fd5b8135610aa881610a73565b9392505050565b600080600060608486031215610ac457600080fd5b833592506020840135610ad681610a73565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610b2557610b25610ae7565b604052919050565b60006020808385031215610b4057600080fd5b82356001600160401b0380821115610b5757600080fd5b818501915085601f830112610b6b57600080fd5b813581811115610b7d57610b7d610ae7565b610b8f601f8201601f19168501610afd565b91508082528684828501011115610ba557600080fd5b8084840185840137600090820190930192909252509392505050565b60008060408385031215610bd457600080fd5b823591506020830135610be681610a73565b809150509250929050565b60006001600160401b03821115610c0a57610c0a610ae7565b5060051b60200190565b600082601f830112610c2557600080fd5b81356020610c3a610c3583610bf1565b610afd565b82815260059290921b84018101918181019086841115610c5957600080fd5b8286015b84811015610c745780358352918301918301610c5d565b509695505050505050565b600080600080600060a08688031215610c9757600080fd5b8535610ca281610a73565b9450602086810135610cb381610a73565b94506040870135935060608701356001600160401b0380821115610cd657600080fd5b818901915089601f830112610cea57600080fd5b8135610cf8610c3582610bf1565b81815260059190911b8301840190848101908c831115610d1757600080fd5b938501935b82851015610d3557843582529385019390850190610d1c565b965050506080890135925080831115610d4d57600080fd5b5050610d5b88828901610c14565b9150509295509295909350565b6001600160401b0381168114610a8857600080fd5b600060208284031215610d8f57600080fd5b8135610aa881610d68565b60008060408385031215610dad57600080fd5b8235610db881610d68565b946020939093013593505050565b600060208284031215610dd857600080fd5b8151610aa881610a73565b600080600060608486031215610df857600080fd5b835192506020840151610e0a81610a73565b6040850151909250610e1b81610d68565b809150509250925092565b60018060a01b038616815260006020868184015285604084015284606084015260a0608084015283518060a085015260005b81811015610e745785810183015185820160c001528201610e58565b50600060c0828601015260c0601f19601f83011685010192505050969550505050505056fea26469706673582212206a072961044b891920434265470cae2f271714ba1cadb1dcdd2c83fa3231364a64736f6c63430008140033";

type CultistsSettlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CultistsSettlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CultistsSettlement__factory extends ContractFactory {
  constructor(...args: CultistsSettlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CultistsSettlement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CultistsSettlement__factory {
    return super.connect(runner) as CultistsSettlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CultistsSettlementInterface {
    return new Interface(_abi) as CultistsSettlementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CultistsSettlement {
    return new Contract(address, _abi, runner) as unknown as CultistsSettlement;
  }
}
