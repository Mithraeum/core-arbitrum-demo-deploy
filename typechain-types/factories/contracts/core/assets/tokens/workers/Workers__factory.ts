/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  Workers,
  WorkersInterface,
} from "../../../../../../contracts/core/assets/tokens/workers/Workers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMightyCreator",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWorldAssetFromSameEra",
    type: "error",
  },
  {
    inputs: [],
    name: "WorkersTransferInvalidParams",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetGroupId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetTypeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "era",
    outputs: [
      {
        internalType: "contract IEra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eraNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldAssetFactory",
    outputs: [
      {
        internalType: "contract IWorldAssetFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208082018352600080835283519182019093529182529060036200003c8382620000f9565b5060046200004b8282620000f9565b505050620001c5565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007f57607f821691505b602082108103620000a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f457600081815260208120601f850160051c81016020861015620000cf5750805b601f850160051c820191505b81811015620000f057828155600101620000db565b5050505b505050565b81516001600160401b0381111562000115576200011562000054565b6200012d816200012684546200006a565b84620000a6565b602080601f8311600181146200016557600084156200014c5750858301515b600019600386901b1c1916600185901b178555620000f0565b600085815260208120601f198616915b82811015620001965788860151825594840194600190910190840162000175565b5085821015620001b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a3980620001d56000396000f3fe608060405234801561001057600080fd5b50600436106101225760003560e01c80634ddf47d4116100a85780634ddf47d41461020b57806370a082311461021e57806379cc6790146102475780637b1039991461025a5780637d884c741461026257806384ba89e31461026a57806395d89b4114610272578063a457c2d71461027a578063a9059cbb1461028d578063dd62ed3e146102a0578063ece56a1a146102b357600080fd5b806306fdde0314610127578063095ea7b3146101455780630b4e99c314610168578063143e55e01461017e57806318160ddd1461019e57806323b872dd146101a657806330b67baa146101b9578063313ce567146101c157806339509351146101d057806340c10f19146101e357806342966c68146101f8575b600080fd5b61012f6102bb565b60405161013c91906116a4565b60405180910390f35b6101586101533660046116ec565b6102f1565b604051901515815260200161013c565b61017061030b565b60405190815260200161013c565b610186610348565b6040516001600160a01b03909116815260200161013c565b600254610170565b6101586101b4366004611718565b6103cc565b610186610404565b6040516012815260200161013c565b6101586101de3660046116ec565b61040e565b6101f66101f13660046116ec565b610430565b005b6101f6610206366004611759565b610446565b6101f6610219366004611788565b610452565b61017061022c366004611839565b6001600160a01b031660009081526020819052604090205490565b6101f66102553660046116ec565b610560565b610186610582565b6101706105c9565b610170610606565b61012f610643565b6101586102883660046116ec565b610660565b61015861029b3660046116ec565b6106e6565b6101706102ae366004611856565b6106f4565b61018661071f565b60606102cd6102c86105c9565b610766565b6040516020016102dd919061188f565b604051602081830303815290604052905090565b6000336102ff81858561086f565b60019150505b92915050565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020607a60208301853c602001519392505050565b6000610352610404565b6001600160a01b031663720a70bd6103686105c9565b6040518263ffffffff1660e01b815260040161038691815260200190565b602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c791906118c0565b905090565b60006103d733610994565b156103ef576103e7848484610a3f565b5060016103fd565b6103fa848484610c08565b90505b9392505050565b60006103c7610c21565b6000336102ff81858561042183836106f4565b61042b91906118f3565b61086f565b610438610c5e565b6104428282610d23565b5050565b61044f81610dfc565b50565b600554610100900460ff16158080156104725750600554600160ff909116105b8061048c5750303b15801561048c575060055460ff166001145b6104f45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6005805460ff191660011790558015610517576005805461ff0019166101001790555b8015610442576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b61056933610994565b15610578576104428282610e02565b6104428282610f42565b600061058c610404565b6001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a3573d6000803e3d6000fd5b604080516020808252818301909252600091309183918291906020820181803683370190505090506020609a60208301853c602001519392505050565b604080516020808252818301909252600091309183918291906020820181803683370190505090506020605a60208301853c602001519392505050565b60606106506102c86105c9565b6040516020016102dd9190611906565b6000338161066e82866106f4565b9050838110156106ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104eb565b6106db828686840361086f565b506001949350505050565b6000336102ff818585610a3f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610729610582565b6001600160a01b031663ece56a1a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a3573d6000803e3d6000fd5b60608160000361078d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156107b757806107a181611933565b91506107b09050600a83611962565b9150610791565b60008167ffffffffffffffff8111156107d2576107d2611772565b6040519080825280601f01601f1916602001820160405280156107fc576020820181803683370190505b5090505b841561086757610811600183611976565b915061081e600a86611989565b6108299060306118f3565b60f81b81838151811061083e5761083e61199d565b60200101906001600160f81b031916908160001a905350610860600a86611962565b9450610800565b949350505050565b6001600160a01b0383166108d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104eb565b6001600160a01b0382166109325760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104eb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061099e610404565b6001600160a01b0316826001600160a01b03161480610305575060006109c2610404565b6001600160a01b031663ebbe80346109d86105c9565b856040518363ffffffff1660e01b81526004016109f69291906119b3565b602060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3791906119ca565b141592915050565b6001600160a01b038316610aa35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104eb565b6001600160a01b038216610b055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104eb565b610b10838383610f57565b6001600160a01b03831660009081526020819052604090205481811015610b885760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104eb565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610bbf9084906118f3565b92505081905550826001600160a01b0316846001600160a01b03166000805160206119e483398151915284604051610bf991815260200190565b60405180910390a35b50505050565b600033610c168582856115a8565b6106db858585610a3f565b604080516014808252818301909252600091309183918291906020820181803683370190505090506014602a60208301853c601401519392505050565b610c66610404565b6001600160a01b0316336001600160a01b031614158015610d0357506000610c8c610404565b6001600160a01b031663ebbe8034610ca26105c9565b336040518363ffffffff1660e01b8152600401610cc09291906119b3565b602060405180830381865afa158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0191906119ca565b145b15610d215760405163422656d160e01b815260040160405180910390fd5b565b6001600160a01b038216610d795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104eb565b610d8560008383610f57565b8060026000828254610d9791906118f3565b90915550506001600160a01b03821660009081526020819052604081208054839290610dc49084906118f3565b90915550506040518181526001600160a01b038316906000906000805160206119e48339815191529060200160405180910390a35050565b61044f33825b6001600160a01b038216610e625760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104eb565b610e6e82600083610f57565b6001600160a01b03821660009081526020819052604090205481811015610ee25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104eb565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f11908490611976565b90915550506040518281526000906001600160a01b038516906000805160206119e483398151915290602001610987565b610f4d8233836115a8565b6104428282610e02565b6000610f61610404565b90506000610f6d6105c9565b604080518082018252600b81526a1ddbdc9ad95c9cd41bdbdb60aa1b60209091015251633aefa00d60e21b81529091506000907f6dd10f5694032abddf028b131aa9186f0ec727b5d419b1e0623133ed6f122928906001600160a01b0385169063ebbe803490610fe39086908b906004016119b3565b602060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102491906119ca565b604080518082018252600a8152691cd95d1d1b195b595b9d60b21b60209091015251633aefa00d60e21b8152911491506000907f6522b1ac0c0c078f1fcc696b9cf72c59bb3624b7d2a9d82059b2f3832fd9973d906001600160a01b0386169063ebbe80349061109a9087908c906004016119b3565b602060405180830381865afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110db91906119ca565b60408051808201825260088152676275696c64696e6760c01b60209091015251633aefa00d60e21b8152911491506000907f010b6fd4eff8a0ca8c7925f2d29e6173e90462d56ae99e39fa817c79f4028518906001600160a01b0387169063ebbe80349061114f9088908d906004016119b3565b602060405180830381865afa15801561116c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119091906119ca565b1490506001600160a01b038816158015906111a9575082155b80156111b3575081155b80156111bd575080155b156111db576040516311eb3d1360e31b815260040160405180910390fd5b604080518082018252600a8152691cd95d1d1b195b595b9d60b21b60209091015251633aefa00d60e21b81526000907f6522b1ac0c0c078f1fcc696b9cf72c59bb3624b7d2a9d82059b2f3832fd9973d906001600160a01b0388169063ebbe80349061124d9089908d906004016119b3565b602060405180830381865afa15801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e91906119ca565b60408051808201825260088152676275696c64696e6760c01b60209091015251633aefa00d60e21b8152911491506000907f010b6fd4eff8a0ca8c7925f2d29e6173e90462d56ae99e39fa817c79f4028518906001600160a01b0389169063ebbe803490611302908a908e906004016119b3565b602060405180830381865afa15801561131f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134391906119ca565b1490506001600160a01b0389161580159061135c575081155b8015611366575080155b15611384576040516311eb3d1360e31b815260040160405180910390fd5b6001600160a01b03891661139e5750505050505050505050565b6001600160a01b038a161580156113b25750815b156113c35750505050505050505050565b8380156113cd5750805b80156113f25750896001600160a01b03166113e78a61161c565b6001600160a01b0316145b1561145657886001600160a01b0316631d8557d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561143257600080fd5b505af1158015611446573d6000803e3d6000fd5b5050505050505050505050505050565b8280156114605750815b80156114855750886001600160a01b031661147a8b61161c565b6001600160a01b0316145b156114c557896001600160a01b0316631d8557d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561143257600080fd5b8280156114cf5750805b80156114fc57506114df8961161c565b6001600160a01b03166114f18b61161c565b6001600160a01b0316145b1561158f57896001600160a01b0316631d8557d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561153c57600080fd5b505af1158015611550573d6000803e3d6000fd5b50505050886001600160a01b0316631d8557d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561143257600080fd5b6040516311eb3d1360e31b815260040160405180910390fd5b60006115b484846106f4565b90506000198114610c02578181101561160f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104eb565b610c02848484840361086f565b6000816001600160a01b031663c45f10006040518163ffffffff1660e01b8152600401602060405180830381865afa15801561165c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030591906118c0565b60005b8381101561169b578181015183820152602001611683565b50506000910152565b60208152600082518060208401526116c3816040850160208701611680565b601f01601f19169190910160400192915050565b6001600160a01b038116811461044f57600080fd5b600080604083850312156116ff57600080fd5b823561170a816116d7565b946020939093013593505050565b60008060006060848603121561172d57600080fd5b8335611738816116d7565b92506020840135611748816116d7565b929592945050506040919091013590565b60006020828403121561176b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561179a57600080fd5b813567ffffffffffffffff808211156117b257600080fd5b818401915084601f8301126117c657600080fd5b8135818111156117d8576117d8611772565b604051601f8201601f19908116603f0116810190838211818310171561180057611800611772565b8160405282815287602084870101111561181957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561184b57600080fd5b81356103fd816116d7565b6000806040838503121561186957600080fd5b8235611874816116d7565b91506020830135611884816116d7565b809150509250929050565b68015dbdc9ad95c9cc8160be1b8152600082516118b3816009850160208701611680565b9190910160090192915050565b6000602082840312156118d257600080fd5b81516103fd816116d7565b634e487b7160e01b600052601160045260246000fd5b80820180821115610305576103056118dd565b64015d492c8160de1b815260008251611926816005850160208701611680565b9190910160050192915050565b600060018201611945576119456118dd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826119715761197161194c565b500490565b81810381811115610305576103056118dd565b6000826119985761199861194c565b500690565b634e487b7160e01b600052603260045260246000fd5b9182526001600160a01b0316602082015260400190565b6000602082840312156119dc57600080fd5b505191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fe7d336370434dd90f6c5206945f5a006cb5ad5bdffd53cc04dea88b14f7d84864736f6c63430008140033";

type WorkersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Workers__factory extends ContractFactory {
  constructor(...args: WorkersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Workers & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Workers__factory {
    return super.connect(runner) as Workers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkersInterface {
    return new Interface(_abi) as WorkersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Workers {
    return new Contract(address, _abi, runner) as unknown as Workers;
  }
}
